{"version":3,"file":"formhandler.min.js","sources":["../src/formhandler.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n    return {\n        init: function(params) {\n            function saveData() {\n                const date = $('#nextReview').val();\n                const pageurl = window.location.pathname + window.location.search;\n\n                if (!date) {\n                    // Call delete endpoint when date is cleared\n                    Ajax.call([{\n                        methodname: 'block_ajaxforms_delete_entry',\n                        args: {\n                            pageurl: pageurl,\n                            courseid: params.courseid\n                        },\n                        done: function(response) {\n                            console.log('Entry deleted:', response.status);\n                        },\n                        fail: Notification.exception\n                    }]);\n                } else {\n                    // Save date normally\n                    Ajax.call([{\n                        methodname: 'block_ajaxforms_save_entry',\n                        args: {\n                            nextreview: date,\n                            pageurl: pageurl,\n                            courseid: params.courseid,\n                            pagetitle: params.pagetitle\n                        },\n                        done: function(response) {\n                            console.log('Saved:', response.status);\n                        },\n                        fail: Notification.exception\n                    }]);\n                }\n            }\n\n            function loadExistingData() {\n                const pageurl = window.location.pathname + window.location.search;\n\n                Ajax.call([{\n                    methodname: 'block_ajaxforms_get_entry',\n                    args: { \n                        pageurl: pageurl,\n                        courseid: params.courseid\n                     },\n                    done: function(data) {\n                        if (data.nextreview) {\n                            $('#nextReview').val(data.nextreview);\n                        }\n                    },\n                    fail: Notification.exception\n                }]);\n            }\n\n            // Attach listeners for autosave\n            $('#nextReview').on('input change', saveData);\n            loadExistingData();\n        }\n    };\n});"],"names":["define","$","Ajax","Notification","init","params","on","date","val","pageurl","window","location","pathname","search","call","methodname","args","nextreview","courseid","pagetitle","done","response","console","log","status","fail","exception","data","loadExistingData"],"mappings":"AAAAA,qCAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAC5D,CACHC,KAAM,SAASC,QAuDXJ,EAAE,eAAeK,GAAG,iCArDVC,KAAON,EAAE,eAAeO,MACxBC,QAAUC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAEtDN,KAeDL,KAAKY,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CACFC,WAAYV,KACZE,QAASA,QACTS,SAAUb,OAAOa,SACjBC,UAAWd,OAAOc,WAEtBC,KAAM,SAASC,UACXC,QAAQC,IAAI,SAAUF,SAASG,SAEnCC,KAAMtB,aAAauB,aAxBvBxB,KAAKY,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,CACFP,QAASA,QACTS,SAAUb,OAAOa,UAErBE,KAAM,SAASC,UACXC,QAAQC,IAAI,iBAAkBF,SAASG,SAE3CC,KAAMtB,aAAauB,iCAqBrBjB,QAAUC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAE3DX,KAAKY,KAAK,CAAC,CACPC,WAAY,4BACZC,KAAM,CACFP,QAASA,QACTS,SAAUb,OAAOa,UAErBE,KAAM,SAASO,MACPA,KAAKV,YACLhB,EAAE,eAAeO,IAAImB,KAAKV,aAGlCQ,KAAMtB,aAAauB,aAM3BE"}